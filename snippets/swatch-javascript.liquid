<script>
	var selectCallback = function(variant, selector) {
      
      if (!variant) {
        return false;
      }
      
      var _parent = '.product-info';
      var _parentprice = _parent + ' .price-box';

      if(variant.price < variant.compare_at_price){
        jQuery(_parentprice + '>span:last-child').addClass('price-box__old');
        jQuery(_parentprice + '>span:first-child').show();
        changePriceValue(_parentprice + '>span:last-child', variant.compare_at_price);
        changePriceValue(_parentprice + '>span:first-child', variant.price);
        jQuery('.product_message_alarm').show();
      } else {
        jQuery(_parentprice + '>span:first-child').hide();
        jQuery(_parentprice + '>span:last-child').removeClass('price-box__old');
        changePriceValue(_parentprice + '>span:last-child', variant.price);
        jQuery('.product_message_alarm').hide();
      }
      
      // BEGIN SWATCHES
      if (variant) {
        var form = jQuery('#' + selector.domIdPrefix).closest('form');
        for (var i=0,length=variant.options.length; i<length; i++) {
          var val = variant.options[i].replace(/'/g,"&#039;");
          var radioButton = form.find(".swatch[data-option-index='" + i + "'] :radio[value='" + val +"']");
          if (radioButton.size()) {
            radioButton.get(0).checked = true;
          }
        }
      }
      // END SWATCHES

      newVariantTextData(_parent + ' .sku', variant.sku);

      if(jQuery(_parent + ' .product-info__sku').length) {
        var $ava = jQuery(_parent + " .product-info__availability");
        if(variant.sku != "") {
          if($ava.hasClass('pull-left')){ $ava.removeClass('pull-left') }
        } else {
          if(!$ava.hasClass('pull-left')){ $ava.addClass('pull-left') }
        }
      }
      
      if (variant.available) {
        if(jQuery(_parent + " .product-info__availability .color-red").length) {
          jQuery(_parent + " .product-info__availability .color-red").removeClass('color-red');
        }
        if (variant.inventory_management == null) {
          jQuery(_parent + " .product-info__availability .color").text("{{ 'products.product.many_in_stock' | t }}");
          jQuery('.product_message_alarm').hide();
        } else {
          jQuery(_parent + " .product-info__availability .color").text(variant.inventory_quantity + " {{ 'products.product.in_stock' | t }}");
		  if(variant.price < variant.compare_at_price && jQuery(".product_message_alarm").children().length) {
          	var percent = Math.round(100 - (variant.price / variant.compare_at_price)*100);
            jQuery('.product_message_alarm .percent').text(percent);
            jQuery('.product_message_alarm .update_quantity_not_delete').text(variant.inventory_quantity);
          }
        }
      } else {
        jQuery(_parent + " .product-info__availability .color").text("{{ 'products.product.sold_out' | t }}");
		jQuery(_parent + " .product-info__availability .color").addClass("color-red");
        jQuery('.product_message_alarm').hide();
      }
      
      {% comment %} https://docs.shopify.com/support/your-website/themes/updating-a-theme-to-use-variant-images {% endcomment %}
      if (variant && variant.featured_image && jQuery("#bigImg").length > 0) {
		var originalImage = jQuery("#bigImg");
		var newImage = variant.featured_image;
        var element = originalImage[0];
        Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
          jQuery('.zoomContainer').remove();
          jQuery(element).removeData('elevateZoom');
          jQuery(element).attr('src', newImageSizedSrc);
          jQuery(element).attr('zoom-image', newImageSizedSrc);
          elevateZoom();
        });
      }
      
      if (variant && variant.available) {
        jQuery(_parent + ' .addtocart').removeAttr('disabled');
        jQuery(_parent + ' .addtocart').html('{{ "products.product.add_to_cart_html" | t }}');
        jQuery(_parent + ' .qty-label').show();
        jQuery(_parent + ' .qty-input').show();
      } else {
      	jQuery(_parent + ' .addtocart').attr('disabled','disabled');
        jQuery(_parent + ' .addtocart').html('{{ "products.product.unavailable" | t }}');
		jQuery(_parent + ' .qty-label').hide();
        jQuery(_parent + ' .qty-input').hide();
      }
  	};
  
    function changePriceValue (cell, value) {
		jQuery(cell).html(Shopify.formatMoney(value, "{{ shop.money_format }}"));
    };
  
    function newVariantTextData (obj, value) {
      if(value != '') {
        jQuery(obj).parent().show();
        jQuery(obj).text(value);
      }
      else {
        jQuery(obj).parent().hide();
        jQuery(obj).text('');
      }
    };
                                              
    jQuery(document).ready(function($){
      {% if product.available and product.variants.size > 1 %}
      	new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
      	{% if product.options.size > 1 %}Shopify.linkOptionSelectors({{ product | json }});{% endif %}
      {% endif %}
    });

</script>
<script>
jQuery(function() {
  jQuery('.swatch :radio').change(function() {
    var optionIndex = jQuery(this).closest('.swatch').attr('data-option-index');
    var optionValue = jQuery(this).val();
    jQuery(this)
      .closest('form')
      .find('.single-option-selector')
      .eq(optionIndex)
      .val(optionValue)
      .trigger('change');
  });
  if(jQuery(".selector-wrapper label").length) {
    jQuery(".selector-wrapper label").each(function( index ) {
      jQuery(this).text(jQuery(this).text() + ":");
    });
  }
});
</script>
<script>
// (c) Copyright 2014 Caroline Schnapp. All Rights Reserved. Contact: mllegeorgesand@gmail.com
// See http://docs.shopify.com/manual/configuration/store-customization/advanced-navigation/linked-product-options

var Shopify = Shopify || {};

Shopify.optionsMap = {};

Shopify.updateOptionsInSelector = function(selectorIndex) {
    
  switch (selectorIndex) {
    case 0:
      var key = 'root';
      var selector = jQuery('.single-option-selector:eq(0)');
      break;
    case 1:
      var key = jQuery('.single-option-selector:eq(0)').val();
      var selector = jQuery('.single-option-selector:eq(1)');
      break;
    case 2:
      var key = jQuery('.single-option-selector:eq(0)').val();  
      key += ' / ' + jQuery('.single-option-selector:eq(1)').val();
      var selector = jQuery('.single-option-selector:eq(2)');
  }
  
  var initialValue = selector.val();
  selector.empty();    
  var availableOptions = Shopify.optionsMap[key];
  for (var i=0; i<availableOptions.length; i++) {
    var option = availableOptions[i];
    var newOption = jQuery('<option></option>').val(option).html(option);
    selector.append(newOption);
  }
  jQuery('.swatch[data-option-index="' + selectorIndex + '"] .swatch-element').each(function() {
    if (jQuery.inArray(jQuery(this).attr('data-value'), availableOptions) !== -1) {
      jQuery(this).removeClass('soldout').show().find(':radio').removeAttr('disabled','disabled').removeAttr('checked');
    }
    else {
      jQuery(this).addClass('soldout').hide().find(':radio').removeAttr('checked').attr('disabled','disabled');
    }
  });
  if (jQuery.inArray(initialValue, availableOptions) !== -1) {
    selector.val(initialValue);
  }
  selector.trigger('change');  
  
};

Shopify.linkOptionSelectors = function(product) {
  // Building our mapping object.
  for (var i=0; i<product.variants.length; i++) {
    var variant = product.variants[i];
    if (variant.available) {
      // Gathering values for the 1st drop-down.
      Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
      Shopify.optionsMap['root'].push(variant.option1);
      Shopify.optionsMap['root'] = Shopify.uniq(Shopify.optionsMap['root']);
      // Gathering values for the 2nd drop-down.
      if (product.options.length > 1) {
        var key = variant.option1;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option2);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
      // Gathering values for the 3rd drop-down.
      if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option3);
        Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
      }
    }
  }
  // Update options right away.
  Shopify.updateOptionsInSelector(0);
  if (product.options.length > 1) Shopify.updateOptionsInSelector(1);
  if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
  // When there is an update in the first dropdown.
  jQuery(".single-option-selector:eq(0)").change(function() {
    Shopify.updateOptionsInSelector(1);
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });
  // When there is an update in the second dropdown.
  jQuery(".single-option-selector:eq(1)").change(function() {
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });
  
};
  
</script>